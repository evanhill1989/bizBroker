generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  String    @id @unique
  email               String    @unique
  firstName           String?
  lastName            String?
  profileImage        String?
  createdAt           DateTime  @default(now())
  onboardingCompleted Boolean   @default(false)
  buyerProfile        Buyer?    @relation("BuyerProfile")
  Listing             Listing[]
  Post                Post[]
  sellerProfile       Seller?   @relation("SellerProfile")
}

model Buyer {
  id             String       @id @unique @default(uuid())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  userId         String       @unique
  onboardingStep Int          @default(1)
  user           User         @relation("BuyerProfile", fields: [userId], references: [id])
  inquiries      Inquiry[]
  preferences    Preference[]
}

model Inquiry {
  id        String   @id @unique @default(uuid())
  message   String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  buyerId   String
  sellerId  String
  buyer     Buyer    @relation(fields: [buyerId], references: [id])
  seller    Seller   @relation(fields: [sellerId], references: [id])
}

model Preference {
  id      String @id @default(uuid())
  type    String
  value   String
  buyerId String
  buyer   Buyer  @relation(fields: [buyerId], references: [id])
}

model Seller {
  id          String    @id @unique @default(uuid())
  companyName String
  phoneNumber String
  website     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String    @unique
  Inquiry     Inquiry[]
  listings    Listing[]
  user        User      @relation("SellerProfile", fields: [userId], references: [id])
}

model Listing {
  id                     String   @id @default(uuid())
  name                   String
  description            String
  subdirectory           String   @unique
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  imageUrl               String?
  userId                 String?
  sellerId               String?
  businessModel          String
  location               String
  maturity               String
  price                  String
  profitMultiple         String
  revenueMultiple        String
  scale                  String
  trailing12MonthProfit  String
  trailing12MonthRevenue String
  Seller                 Seller?  @relation(fields: [sellerId], references: [id])
  User                   User?    @relation(fields: [userId], references: [id])
  posts                  Post[]
}

model Post {
  id               String   @id @default(uuid())
  title            String
  articleContent   Json
  smallDescription String
  image            String
  slug             String   @unique
  createdAt        DateTime @default(now())
  updatedAt        DateTime @default(now())
  userId           String?
  listingId        String?
  Listing          Listing? @relation(fields: [listingId], references: [id], onDelete: Cascade)
  User             User?    @relation(fields: [userId], references: [id])
}
